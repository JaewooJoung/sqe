---
layout: default
title: Severity Assessment Matrix
---

<div class="container">
  <div class="controls">
    <select id="severity">
      {% for option in site.data.severity_matrix.options.severity %}
        <option value="{{ option.id }}">{{ option.label }}</option>
      {% endfor %}
    </select>

    <select id="exposure">
      {% for option in site.data.severity_matrix.options.exposure %}
        <option value="{{ option.id }}">{{ option.label }}</option>
      {% endfor %}
    </select>

    <select id="controllability">
      {% for option in site.data.severity_matrix.options.controllability %}
        <option value="{{ option.id }}">{{ option.label }}</option>
      {% endfor %}
    </select>
  </div>

  <table id="riskMatrix">
    <tr>
      <th>Controllability</th>
      <th>Exposure</th>
      <th colspan="4" class="severity-header">Severity</th>
    </tr>
    <tr>
      <th></th>
      <th></th>
      {% for s in site.data.severity_matrix.options.severity %}
        <th>{{ s.id }}</th>
      {% endfor %}
    </tr>

    {% for c_entry in site.data.severity_matrix.matrix %}
      {% assign c_id = c_entry[0] %}
      {% assign e_entries = c_entry[1] %}
      
      {% for e_entry in e_entries %}
        {% assign e_id = e_entry[0] %}
        {% assign s_values = e_entry[1] %}
        <tr>
          <td>{% if forloop.first %}{{ c_id }}{% endif %}</td>
          <td>{{ e_id }}</td>
          {% for s in site.data.severity_matrix.options.severity %}
            <td class="{{ s_values[s.id] | downcase }}" 
                data-c="{{ c_id }}"
                data-e="{{ e_id }}"
                data-s="{{ s.id }}">
              {{ s_values[s.id] }}
            </td>
          {% endfor %}
        </tr>
      {% endfor %}
    {% endfor %}
  </table>
</div>

<style>
  .container { 
    max-width: 1000px; 
    margin: 20px auto; 
    font-family: Arial, sans-serif;
    background-color: #ffffff;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  }
  .controls { 
    margin-bottom: 20px;
    display: flex;
    gap: 15px;
  }
  select { 
    padding: 10px;
    border: 1px solid #ddd;
    border-radius: 4px;
    font-size: 14px;
    min-width: 200px;
    background-color: #f8f9fa;
  }
  table { 
    border-collapse: collapse; 
    width: 100%;
    background-color: #ffffff;
  }
  th, td { 
    border: 1px solid #dee2e6;
    padding: 12px;
    text-align: center;
  }
  th { 
    background-color: #f8f9fa;
    font-weight: bold;
  }
  .highlighted { 
    border: 3px solid #dc3545 !important;
    position: relative;
    z-index: 1;
    box-shadow: 0 0 10px rgba(220,53,69,0.3);
  }
  .qm { 
    background-color: #e8f5e9;
    transition: background-color 0.3s ease;
  }
  .a { 
    background-color: #fff3cd;
    transition: background-color 0.3s ease;
  }
  .b { 
    background-color: #ffe0b2;
    transition: background-color 0.3s ease;
  }
  .c { 
    background-color: #ffcdd2;
    transition: background-color 0.3s ease;
  }
  .d { 
    background-color: #ff8a80;
    transition: background-color 0.3s ease;
  }
  .severity-header {
    font-size: 1.2em;
    font-weight: bold;
    background-color: #f8f9fa;
  }
  td:hover {
    opacity: 0.8;
    cursor: pointer;
  }
</style>

<script>
  function highlightCell() {
    const severity = document.getElementById('severity').value;
    const exposure = document.getElementById('exposure').value;
    const controllability = document.getElementById('controllability').value;
    
    document.querySelectorAll('.highlighted').forEach(el => {
      el.classList.remove('highlighted');
    });
    
    const cell = document.querySelector(
      `[data-c="${controllability}"][data-e="${exposure}"][data-s="${severity}"]`
    );
    if (cell) {
      cell.classList.add('highlighted');
      cell.scrollIntoView({ behavior: 'smooth', block: 'center' });
    }
  }

  ['severity', 'exposure', 'controllability'].forEach(id => {
    document.getElementById(id).addEventListener('change', highlightCell);
  });

  // Add click handler for cells
  document.querySelectorAll('td[data-c]').forEach(cell => {
    cell.addEventListener('click', function() {
      const c = this.getAttribute('data-c');
      const e = this.getAttribute('data-e');
      const s = this.getAttribute('data-s');
      
      document.getElementById('controllability').value = c;
      document.getElementById('exposure').value = e;
      document.getElementById('severity').value = s;
      
      highlightCell();
    });
  });

  highlightCell();
</script>
